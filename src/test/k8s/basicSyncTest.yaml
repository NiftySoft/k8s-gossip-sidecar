# Create a job for injecting data to each running pod
apiVersion: batch/v1
kind: Job
metadata:
  name: test-injection
  labels:
    app: integration-tests
    test: basic-sync-it
spec:
  template:
    spec:
      containers:
      - name: test-injection
        image: odise/busybox-curl
        command: ['sh', '-c']
        args:
          - echo injecting data;
            for i in 0 1 2 3 4; do
              res=`curl -f -X POST basic-sync-it-$i:80/map?k=basic-sync-it-$i -d value`;
              if test $res != 200; then exit -1; fi;
              echo injected pod $i;
            done;
      restartPolicy: OnFailure
---
# Create a "verification job" which verifies that all of the keys made their way to node 0
apiVersion: batch/v1
kind: Job
metadata:
  name: test-assessment
  labels:
    app: integration-tests
    test: basic-sync-it
spec:
  template:
    spec:
      containers:
      - name: test-injection
        image: odise/busybox-curl
        command: ['sh', '-c']
        args:
          - echo beginning assessment;
            for i in 0 1 2 3 4; do
              res=`curl -f -X GET basic-sync-it-$i:80/map?k=basic-sync-it-$i`;
              if test $res != 200; then exit -1; fi;
              echo found key $i;
            done;
      restartPolicy: OnFailure
---
apiVersion: v1
kind: Service
metadata:
  name: basic-sync-it
  labels:
    app: integration-tests
    test: basic-sync-it
spec:
  clusterIP: None
  ports:
    - port: 46747
      name: gossip
  selector:
    test: basic-sync-it
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: basic-sync-it
  labels:
    app: integration-tests
    test: basic-sync-it
spec:
  serviceName: "basic-sync-it"
  replicas: 5
  selector:
    matchLabels:
      test: basic-sync-it
  template:
    metadata:
      labels:
        test: basic-sync-it
    spec:
      imagePullSecrets:
        - name: myregistrykey
      initContainers:
      - name: init-service
        image: busybox
        command: ['sh', '-c', 'until nslookup basic-sync-it; do echo waiting for svc/basic-sync-it; sleep 2; done']
      containers:
      - name: container-under-test
        image: registry.gitlab.com/kalexmills/k8s-gossip-sidecar:1.0-SNAPSHOT
        imagePullPolicy: Always
        ports:
        - name: client-http
          containerPort: 80
        - name: peer
          containerPort: 46747
        env:
        - name: PEER_PORT
          value: "46747"
        - name: CLIENT_PORT
          value: "80"
        - name: SERVICE_DNS_NAME
          value: "gossip-sidecar.default"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.IP
        livenessProbe:
          tcpSocket:
            port: peer
          initialDelaySeconds: 10
          periodSeconds: 1